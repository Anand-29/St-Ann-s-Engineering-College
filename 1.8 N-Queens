#n-queens
def safe(q,r,c):
    for i in range(c,-1,-1):
        if(q[r][i]==1):
            return False
    for i,j in zip(range(r,-1,-1),range(c,-1,-1)):
        if(q[i][j]==1):
            return False
    for i,j in zip(range(r,4),range(c,-1,-1)):
        if(q[i][j]==1):
            return False
    return True
def solution(q,c):
    if(c>3):
        return True
    for r in range(4):
        if(safe(q,r,c)==True):
            q[r][c]=1
            if(solution(q,c+1)==True):
                return True
        q[r][c]=0
    return False
q=[[0,0,0,0],
   [0,0,0,0],
   [0,0,0,0],
   [0,0,0,0]]
c=0
print(solution(q,c))
for i in range(4):
    for j in range(4):
        if(q[i][j]==1):
            print("Q",end=" ")
        else:
            print("* ",end="")
    print()
